#!/usr/bin/perl -w

use strict;
use FindBin;
use File::Basename;

my $home = "$FindBin::Bin";
require "$home/UTIL.pm";

if ($#ARGV != 3) {
  print "Usage: iterate_model_TCR_pMHC.pl  <template_DB> <TCR_model_list> <peptide_sequence_file> <pMHC_template>\n";
  print "Assumes that template MHC chains are AB, and peptide chain is C\n";
  exit;
}

my $template_DB = $ARGV[0];
my $TCR_DB = $ARGV[1];
my $sequence_file = $ARGV[2];
my $pMHC = $ARGV[3];
my $pMHC_signature = UTIL::pMHC_name_signature($pMHC);

# read sequence file
my @sequences = UTIL::read_fasta_sequences($sequence_file);

my $peptide = `$home/pdb2fasta $pMHC | tail -n1`;
chomp $peptide;
my $peptide_length = length($peptide);
print "MHC peptide_length = $peptide_length\n";

my $window_size = $peptide_length;
foreach my $sequence (@sequences) {
  for(my $i=0; $i<length($sequence)-($window_size-1); $i++) {
    my $peptide_sequence = substr($sequence, $i, $window_size);
    my $name_signature = $pMHC_signature . "_" . $peptide_sequence;
    my $pMHC_pdb = "pMHC_" . $name_signature . ".pdb";

    my $cmd = "$home/model_TCR_pMHC_SOAP.pl $template_DB $TCR_DB $pMHC_pdb";
    print "$cmd\n";
    `$cmd`;
    #unlink $pMHC_pdb;
    my $peptide_file = $name_signature . ".pdb";
    #unlink $peptide_file;
  }
}
